{"ast":null,"code":"var _jsxFileName = \"/Users/jblackmore/Dropbox (Personal)/Dev/react-dapp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\nimport Greeter from './artifacts/contracts/Greeter.sol/Greeter.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst greeterAddress = \"0x5fbdb2315678afecb367f032d93f642f64180aa3\";\n\nfunction App() {\n  _s();\n\n  // store greeting in local state\n  const [greeting, setGreetingValue] = useState(); // request access to the user's MetaMask account\n\n  async function requestAccount() {\n    await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n  } // call the smart contract, read the current greeting value\n\n\n  async function fetchGreeting() {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(greeterAddress, Greeter.abi, provider);\n\n      try {\n        const data = await contract.greet();\n        console.log('data: ', data);\n      } catch (err) {\n        console.log(\"Error: \", err);\n      }\n    }\n  } // call the smart contract, send an update\n\n\n  async function setGreeting() {\n    if (!greeting) return;\n\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(greeterAddress, Greeter.abi, signer);\n      const transaction = await contract.setGreeting(greeting);\n      await transaction.wait();\n      fetchGreeting();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchGreeting,\n        children: \"Fetch Greeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: setGreeting,\n        children: \"Set Greeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setGreetingValue(e.target.value),\n        placeholder: \"Set greeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ssJ+r0h47BdXS1rZN8gxuQdI/4c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jblackmore/Dropbox (Personal)/Dev/react-dapp/src/App.js"],"names":["useState","ethers","Greeter","greeterAddress","App","greeting","setGreetingValue","requestAccount","window","ethereum","request","method","fetchGreeting","provider","providers","Web3Provider","contract","Contract","abi","data","greet","console","log","err","setGreeting","signer","getSigner","transaction","wait","e","target","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,gDAApB;;AAEA,MAAMC,cAAc,GAAG,4CAAvB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEf;AACA,QAAM,CAACC,QAAD,EAAWC,gBAAX,IAA+BN,QAAQ,EAA7C,CAHe,CAKf;;AACA,iBAAeO,cAAf,GAAgC;AAC9B,UAAMC,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAxB,CAAN;AACD,GARc,CAUf;;;AACA,iBAAeC,aAAf,GAA+B;AAC7B,QAAI,OAAOJ,MAAM,CAACC,QAAd,KAA2B,WAA/B,EAA4C;AAC1C,YAAMI,QAAQ,GAAG,IAAIZ,MAAM,CAACa,SAAP,CAAiBC,YAArB,CAAkCP,MAAM,CAACC,QAAzC,CAAjB;AACA,YAAMO,QAAQ,GAAG,IAAIf,MAAM,CAACgB,QAAX,CAAoBd,cAApB,EAAoCD,OAAO,CAACgB,GAA5C,EAAiDL,QAAjD,CAAjB;;AACA,UAAI;AACF,cAAMM,IAAI,GAAG,MAAMH,QAAQ,CAACI,KAAT,EAAnB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,IAAtB;AACD,OAHD,CAGE,OAAOI,GAAP,EAAY;AACZF,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,GAAvB;AACD;AACF;AACF,GAtBc,CAwBf;;;AACA,iBAAeC,WAAf,GAA6B;AAC3B,QAAI,CAACnB,QAAL,EAAe;;AACf,QAAI,OAAOG,MAAM,CAACC,QAAd,KAA2B,WAA/B,EAA4C;AAC1C,YAAMF,cAAc,EAApB;AACA,YAAMM,QAAQ,GAAG,IAAIZ,MAAM,CAACa,SAAP,CAAiBC,YAArB,CAAkCP,MAAM,CAACC,QAAzC,CAAjB;AACA,YAAMgB,MAAM,GAAGZ,QAAQ,CAACa,SAAT,EAAf;AACA,YAAMV,QAAQ,GAAG,IAAIf,MAAM,CAACgB,QAAX,CAAoBd,cAApB,EAAoCD,OAAO,CAACgB,GAA5C,EAAiDO,MAAjD,CAAjB;AACA,YAAME,WAAW,GAAG,MAAMX,QAAQ,CAACQ,WAAT,CAAqBnB,QAArB,CAA1B;AACA,YAAMsB,WAAW,CAACC,IAAZ,EAAN;AACAhB,MAAAA,aAAa;AACd;AACF;;AAEE,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACG;AAAA,8BACC;AAAQ,QAAA,OAAO,EAAEA,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAQ,QAAA,OAAO,EAAEY,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC;AAAO,QAAA,QAAQ,EAAEK,CAAC,IAAIvB,gBAAgB,CAACuB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAtC;AACA,QAAA,WAAW,EAAC;AADZ;AAAA;AAAA;AAAA;AAAA,cAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADD;AAWF;;GAjDQ3B,G;;KAAAA,G;AAmDT,eAAeA,GAAf","sourcesContent":["import { useState } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\nimport Greeter from './artifacts/contracts/Greeter.sol/Greeter.json'\n\nconst greeterAddress = \"0x5fbdb2315678afecb367f032d93f642f64180aa3\"\n\nfunction App() {\n  \n// store greeting in local state\nconst [greeting, setGreetingValue] = useState()\n\n// request access to the user's MetaMask account\nasync function requestAccount() {\n  await window.ethereum.request({ method: 'eth_requestAccounts' });\n}\n\n// call the smart contract, read the current greeting value\nasync function fetchGreeting() {\n  if (typeof window.ethereum !== 'undefined') {\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    const contract = new ethers.Contract(greeterAddress, Greeter.abi, provider)\n    try {\n      const data = await contract.greet()\n      console.log('data: ', data)\n    } catch (err) {\n      console.log(\"Error: \", err)\n    }\n  }    \n}\n\n// call the smart contract, send an update\nasync function setGreeting() {\n  if (!greeting) return\n  if (typeof window.ethereum !== 'undefined') {\n    await requestAccount()\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner()\n    const contract = new ethers.Contract(greeterAddress, Greeter.abi, signer)\n    const transaction = await contract.setGreeting(greeting)\n    await transaction.wait()\n    fetchGreeting()\n  }\n}\n  \n   return (\n    <div className=\"App\">\n       <header> \n        <button onClick={fetchGreeting}>Fetch Greeting</button>\n        <button onClick={setGreeting}>Set Greeting</button>\n        <input onChange={e => setGreetingValue(e.target.value)} \n        placeholder=\"Set greeting\" \n        />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}